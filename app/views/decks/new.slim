- provide(:title, 'New deck')
/.inside
    .shadow
.row
    #new_deck
        - classes_list = %w(Priest Warrior Warlock Mage Druid Hunter Shaman Paladin Rogue Common)
        = form_tag({ controller: 'decks', action: 'create' }, method: 'post') do
            .left_side
                h4 New Deck creating
                p Hear you can see selected cards and their amount
                p
                    = 'Cards amount in the deck - '
                    span#card_amount= '0'
                #cards_list
                = submit_tag 'Save', class: 'button', 'data-turbolinks': 'false'
            .right_side
                p Click to cards to change amount from 0 to 2
                .columns.small-3= text_field_tag :name, nil, placeholder: 'Deck Name'
                .columns.small-3= select_tag :playerClass, options_for_select(%w(Priest Warrior Warlock Mage Druid Hunter Shaman Paladin Rogue))
                .columns.small-3= select_tag :formats, options_for_select(%w(wild standard)), include_blank: false
                .columns.small-3= text_field_tag :link, nil, placeholder: 'Link'
                .columns.small-12= text_field_tag :caption, nil, placeholder: 'Caption'
                .clearfix
                #filters
                    span
                        strong Filters
                    span Mana cost
                    span= select_tag :mana_cost, options_for_select(%w(0 1 2 3 4 5 6 7)), prompt: 'All'
                ul#new-cards-tabs.tabs data-tabs=''
                    - classes_list.each_with_index do |name, index|
                        li.tabs-title class="#{name}" class="#{'is-active visibled' if index == 0}"
                            = link_to name, "#cards#{index}", 'aria-selected' => "#{'true' if index == 0}", 'data-turbolinks': 'false'
                .tabs-content#new-tabs-content data-tabs-content='new-cards-tabs'
                    - classes_list.each_with_index do |name, index|
                        .tabs-panel class="#{'is-active' if index == 0}" id="cards#{index}"
                            - name = nil if name == 'Common'
                            - cards = @cards.select { |card| card.playerClass == name }
                            - (0..7).each do |cost|
                                .costs class="cost_#{cost}"
                                    p= "Mana cost - #{cost}"
                                    - cards_with_cost = cost < 7 ? cards.select { |card| card.cost == cost } : cards.select { |card| card.cost >= 7 }
                                    - cards_with_cost.sort_by{ |card| card.name }.each do |card|
                                        .card class="mana_#{cost} #{card.rarity} #{card.formats} #{card.name.split(' ').join('_')}"
                                            .image style="background-image: url('#{card.image}');"
                                                .card-shadow
                                            .inner
                                                = check_box_tag card.id, value = '0', checked = false
                                                = label_tag card.id, card.name, class: 'none'
